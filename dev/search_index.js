var documenterSearchIndex = {"docs":
[{"location":"guide/#User-Guide","page":"Getting Started","title":"User Guide","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"This guide provides comprehensive instructions for using EntrapmentAnalyses.jl in your proteomics workflows.","category":"page"},{"location":"guide/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"EntrapmentAnalyses.jl requires Julia 1.0 or later. Navigate to the EntrapmentAnalyses directory. Use ] to enter Pkg mode. ","category":"page"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"\n(@v1.11) pkg> activate .\n  Activating project at `~/Projects/EntrapmentAnalysesJmod/EntrapmentAnalyses`\n\njulia> using Revise, EntrapmentAnalyses\nPrecompiling EntrapmentAnalyses...\n  1 dependency successfully precompiled in 6 seconds. 273 already precompiled.","category":"page"},{"location":"guide/#Input-Data-Requirements","page":"Getting Started","title":"Input Data Requirements","text":"","category":"section"},{"location":"guide/#PSM-Results-(Parquet-Format)","page":"Getting Started","title":"PSM Results (Parquet Format)","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"Your PSM results file should contain the following columns:","category":"page"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"stripped_seq: Peptide sequence without modifications (String)\nz: Precursor charge state (Integer)\nPredVal: Prediction score from your search engine (Float)\ndecoy: Boolean flag indicating decoy status (Bool)\nfile_name: Identifier for the source file (String)\nprotein: Protein identifiers, semicolon-separated for multi-mapping peptides (String)","category":"page"},{"location":"guide/#Spectral-Library-(TSV-Format)","page":"Getting Started","title":"Spectral Library (TSV Format)","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"The spectral library should contain:","category":"page"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"PeptideSequence: Modified peptide sequence (String)\nPrecursorCharge: Charge state (Integer)\nEntrapmentGroupId: 0 for original peptides, >0 for entrapments (Integer)\nPrecursorIdx: Unique identifier linking original/entrapment pairs (Integer)","category":"page"},{"location":"guide/#Basic-Usage","page":"Getting Started","title":"Basic Usage","text":"","category":"section"},{"location":"guide/#Precursor-Level-Analysis","page":"Getting Started","title":"Precursor-Level Analysis","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"using EntrapmentAnalyses\n\n# Single file analysis\nresults = run_efdr_analysis(\n    [\"data/search_results.parquet\"],\n    \"data/spectral_library.tsv\"\n)\n\n# Multiple file analysis\nresults = run_efdr_analysis(\n    [\"data/run1.parquet\", \"data/run2.parquet\", \"data/run3.parquet\"],\n    \"data/spectral_library.tsv\";\n    output_dir=\"results/efdr_analysis\"\n)","category":"page"},{"location":"guide/#Protein-Level-Analysis","page":"Getting Started","title":"Protein-Level Analysis","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"# Protein-level EFDR analysis\nprotein_results = run_protein_efdr_analysis(\n    [\"data/search_results.parquet\"],\n    \"data/spectral_library.tsv\";\n    output_dir=\"results/protein_analysis\",\n    protein_q_threshold=0.01  # 1% protein-level FDR\n)","category":"page"},{"location":"guide/#Advanced-Options","page":"Getting Started","title":"Advanced Options","text":"","category":"section"},{"location":"guide/#Customizing-EFDR-Methods","page":"Getting Started","title":"Customizing EFDR Methods","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"# Run only combined EFDR\nresults = run_efdr_analysis(\n    parquet_files,\n    library_file;\n    efdr_method=:combined\n)\n\n# Run only paired EFDR\nresults = run_efdr_analysis(\n    parquet_files,\n    library_file;\n    efdr_method=:paired\n)\n\n# Run both methods (default)\nresults = run_efdr_analysis(\n    parquet_files,\n    library_file;\n    efdr_method=:both\n)","category":"page"},{"location":"guide/#Custom-Output-Options","page":"Getting Started","title":"Custom Output Options","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"results = run_efdr_analysis(\n    parquet_files,\n    library_file;\n    output_dir=\"custom_output\",\n    save_plots=true,           # Generate and save plots\n    save_tables=true,          # Save result tables\n    generate_report=true       # Create markdown report\n)","category":"page"},{"location":"guide/#Working-with-Results","page":"Getting Started","title":"Working with Results","text":"","category":"section"},{"location":"guide/#Understanding-the-Output","page":"Getting Started","title":"Understanding the Output","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"The analysis generates several output files:","category":"page"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"EFDR Results Table (efdr_results.tsv): Contains EFDR values at different q-value thresholds\nPlots (plots/ directory): EFDR vs q-value plots for each method\nAnalysis Report (analysis_report.md): Comprehensive markdown report with embedded plots","category":"page"},{"location":"guide/#Accessing-Results-Programmatically","page":"Getting Started","title":"Accessing Results Programmatically","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"# The function returns a DataFrame with results\nresults = run_efdr_analysis(files, library)\n\n# Access EFDR values\ncombined_efdr = results[results.method .== \"combined\", :]\npaired_efdr = results[results.method .== \"paired\", :]\n\n# Plot custom visualizations\nusing Plots\nplot(combined_efdr.q_value, combined_efdr.efdr, \n     label=\"Combined EFDR\", \n     xlabel=\"Q-value\", \n     ylabel=\"EFDR\")","category":"page"},{"location":"guide/#Troubleshooting","page":"Getting Started","title":"Troubleshooting","text":"","category":"section"},{"location":"guide/#Common-Issues","page":"Getting Started","title":"Common Issues","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"Missing Values in Data\nThe package automatically handles missing values\nCheck console output for warnings about replaced values\nMemory Issues with Large Datasets\nProcess files in smaller batches\nReduce local_qval_threshold to filter more aggressively\nPairing Warnings\n\"No complement found\" warnings are normal for unpaired peptides\nEnsure your spectral library has correct PrecursorIdx values","category":"page"},{"location":"guide/#Performance-Tips","page":"Getting Started","title":"Performance Tips","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"Use Local SSD Storage: Reading from fast local storage improves performance\nBatch Processing: For many files, process in batches of 10-20\nPre-filter Data: Remove low-quality PSMs before analysis","category":"page"},{"location":"guide/#Best-Practices","page":"Getting Started","title":"Best Practices","text":"","category":"section"},{"location":"guide/","page":"Getting Started","title":"Getting Started","text":"Q-value Thresholds: Start with default 5% threshold, adjust based on your needs\nMultiple Runs: Always analyze multiple technical replicates together\nValidation: Compare EFDR results with traditional target-decoy FDR\nDocumentation: Keep track of analysis parameters for reproducibility","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#Main-API-Functions","page":"API Reference","title":"Main API Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"These are the primary functions for running EFDR analyses:","category":"page"},{"location":"api/#EntrapmentAnalyses.run_efdr_analysis","page":"API Reference","title":"EntrapmentAnalyses.run_efdr_analysis","text":"run_efdr_analysis(parquet_files::Vector{String}, library_path::String; kwargs...)\n\nRun empirical FDR analysis at the precursor level.\n\nThe function modifies the results DataFrame by adding pairing information columns:\n\nis_original: Boolean indicating if peptide is original (true) or entrapment (false)\npair_id: Integer ID linking original/entrapment pairs\nentrap_label: Integer label (0=original, 1=entrapment) for EFDR\ncomplement_score: Plex-specific score of the paired peptide\ncomplement_indices: Deprecated column for backward compatibility\n\nArguments\n\nparquet_files: Vector of paths to Parquet files with PSM results\nlibrary_path: Path to TSV file with spectral library\n\nKeyword Arguments\n\noutput_dir: Output directory (default: \"efdr_output\")\nscore_col: Score column name (default: :PredVal)\nglobal_qval_threshold: Global q-value filter threshold (default: 1.0 = no filter)\nlocal_qval_threshold: Local q-value filter threshold (default: 0.05)\nr_lib: Library to real entrapment ratio (default: 1.0)\nshow_progress: Show progress bars (default: true)\n\nReturns\n\nDataFrame with EFDR columns added\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.run_protein_efdr_analysis","page":"API Reference","title":"EntrapmentAnalyses.run_protein_efdr_analysis","text":"run_protein_efdr_analysis(parquet_files::Vector{String}, library_path::String; kwargs...)\n\nRun empirical FDR analysis at the protein level following the notebook implementation.\n\nThe function modifies the protein DataFrame by adding pairing information columns:\n\nis_original: Boolean indicating if protein is original (true) or entrapment (false)\npair_id: Integer ID linking original/entrapment pairs\nentrap_label: Integer label (0=original, 1=entrapment) for EFDR\ncomplement_score: Plex-specific score of the paired protein\ncomplement_indices: Deprecated column for backward compatibility\n\nArguments\n\nparquet_files: Vector of paths to Parquet files with PSM results\nlibrary_path: Path to TSV file with spectral library\n\nKeyword Arguments\n\noutput_dir: Output directory (default: \"efdr_output\")\nscore_col: Score column name (default: :PredVal)\nglobal_qval_threshold: Global q-value filter threshold (default: 1.0 = no filter)\nlocal_qval_threshold: Local q-value filter threshold (default: 0.05)\nr_lib: Library to real entrapment ratio (default: 1.0)\nshow_progress: Show progress bars (default: true)\n\nReturns\n\nDataFrame with protein-level EFDR analysis\n\n\n\n\n\n","category":"function"},{"location":"api/#Data-Loading","page":"API Reference","title":"Data Loading","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions for loading input data:","category":"page"},{"location":"api/#EntrapmentAnalyses.load_parquet","page":"API Reference","title":"EntrapmentAnalyses.load_parquet","text":"load_parquet(filepath::String)\n\nLoad a single Parquet file containing PSM results.\n\nArguments\n\nfilepath: Path to the Parquet file\n\nReturns\n\nDataFrame with PSM results\n\n\n\n\n\n","category":"function"},{"location":"api/#Analysis-Functions","page":"API Reference","title":"Analysis Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions for different types of analyses:","category":"page"},{"location":"api/#EFDR-Calculation","page":"API Reference","title":"EFDR Calculation","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Core EFDR calculation method:","category":"page"},{"location":"api/#Q-value-Calculation","page":"API Reference","title":"Q-value Calculation","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions for q-value computation:","category":"page"},{"location":"api/#EntrapmentAnalyses.calculate_qvalues!","page":"API Reference","title":"EntrapmentAnalyses.calculate_qvalues!","text":"calculate_qvalues!(df::AbstractDataFrame; score_col=:PredVal, decoy_col=:decoy, sort_df=true)\n\nCalculate local q-values and add to DataFrame.\n\nArguments\n\ndf: DataFrame to process\nscore_col: Score column name\ndecoy_col: Decoy column name  \nsort_df: Whether to sort the DataFrame (default: true)\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.calculate_qvalues_per_file!","page":"API Reference","title":"EntrapmentAnalyses.calculate_qvalues_per_file!","text":"calculate_qvalues_per_file!(df::AbstractDataFrame; score_col=:PredVal, file_col=:file_name)\n\nCalculate q-values separately for each file in the dataframe. Adds :localqvalue and :globalqvalue columns.\n\nArguments\n\ndf: DataFrame with PSM results\nscore_col: Score column name (default: :PredVal)\nfile_col: File identifier column (default: :file_name)\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.calculate_global_qvalues!","page":"API Reference","title":"EntrapmentAnalyses.calculate_global_qvalues!","text":"calculate_global_qvalues!(df::AbstractDataFrame; score_col=:PredVal)\n\nCalculate global q-values (best per precursor). Adds :global_qvalue column to the dataframe.\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.monotonize!","page":"API Reference","title":"EntrapmentAnalyses.monotonize!","text":"monotonize!(values::AbstractVector{T}) where T<:AbstractFloat\n\nEnsure FDR values are monotonically non-decreasing. Works in-place by traversing backwards through sorted results.\n\nAlgorithm\n\nStarting from the end (worst scores), ensures each FDR is at least as large as the FDR of better-scoring results.\n\n\n\n\n\nmonotonize!(values::AbstractVector{Union{Missing, T}}) where T<:AbstractFloat\n\nHandle missing values in monotonization.\n\n\n\n\n\n","category":"function"},{"location":"api/#Pairing-System","page":"API Reference","title":"Pairing System","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions for computing peptide pairings:","category":"page"},{"location":"api/#EntrapmentAnalyses.compute_pairing_vectors!","page":"API Reference","title":"EntrapmentAnalyses.compute_pairing_vectors!","text":"compute_pairing_vectors!(library_df::DataFrame, results_df::DataFrame; kwargs...)\n\nAdd plex-aware pairing information directly to the results DataFrame.\n\nModifies results_df by adding the following columns:\n\n:is_original - Bool: true if peptide is original, false if entrapment\n:pair_id - Int: ID linking original/entrapment pairs from library\n:entrap_label - Int: 0 for original, 1 for entrapment (used in EFDR)\n:complement_score - Float32: plex & file-specific score of paired peptide (-1 if no pair)\n:complement_indices - Int: deprecated, always -1 (kept for compatibility)\n\nThe complement scores respect both file and plex boundaries, meaning the same peptide in different plexes can have different complement scores.\n\nArguments\n\nlibrary_df: Library DataFrame with entrapment pairs\nresults_df: Results DataFrame to modify (must have file_name and channel columns)\n\nKeyword Arguments\n\nlib_seq_col: Library sequence column (default: :PeptideSequence)\nlib_charge_col: Library charge column (default: :PrecursorCharge)\nlib_entrap_col: Library entrapment group column (default: :EntrapmentGroupId)\nlib_pair_col: Library pair ID column (default: :PrecursorIdx)\nresults_seq_col: Results sequence column (default: :stripped_seq)\nresults_charge_col: Results charge column (default: :z)\nchannel_col: Channel/plex column (default: :channel)\nscore_col: Score column (default: :PredVal)\nfile_col: File name column (default: :file_name)\nshow_progress: Show progress bars (default: true)\n\nReturns\n\nModified results_df with new columns added\n\n\n\n\n\n","category":"function"},{"location":"api/#Visualization","page":"API Reference","title":"Visualization","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions for generating plots and reports:","category":"page"},{"location":"api/#EntrapmentAnalyses.plot_combined_efdr","page":"API Reference","title":"EntrapmentAnalyses.plot_combined_efdr","text":"plot_combined_efdr(df::DataFrame; kwargs...)\n\nCreate a plot showing only the combined EFDR results.\n\nArguments\n\ndf: DataFrame with EFDR results\noutput_path: Output file path (default: \"combined_efdr.pdf\")\nfdr_col: FDR column name (default: :local_qvalue)\nefdr_col: EFDR column name (default: :combinedentrapmentfdr)\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.plot_paired_efdr","page":"API Reference","title":"EntrapmentAnalyses.plot_paired_efdr","text":"plot_paired_efdr(df::DataFrame; kwargs...)\n\nCreate a plot showing only the paired EFDR results.\n\nArguments\n\ndf: DataFrame with EFDR results\noutput_path: Output file path (default: \"paired_efdr.pdf\")\nfdr_col: FDR column name (default: :local_qvalue)\nefdr_col: EFDR column name (default: :pairedentrapmentfdr)\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.plot_efdr_comparison_both_methods","page":"API Reference","title":"EntrapmentAnalyses.plot_efdr_comparison_both_methods","text":"plot_efdr_comparison_both_methods(df::DataFrame; kwargs...)\n\nCreate a comparison plot showing both combined and paired EFDR methods.\n\nArguments\n\ndf: DataFrame with both combined and paired EFDR results\noutput_path: Output file path (default: \"efdrcomparisonboth_methods.pdf\")\nfdr_col: FDR column name (default: :local_qvalue)\ncombined_efdr_col: Combined EFDR column name (default: :combinedentrapmentfdr)\npaired_efdr_col: Paired EFDR column name (default: :pairedentrapmentfdr)\n\n\n\n\n\n","category":"function"},{"location":"api/#EntrapmentAnalyses.generate_analysis_report","page":"API Reference","title":"EntrapmentAnalyses.generate_analysis_report","text":"generate_analysis_report(df::DataFrame, output_dir::String; kwargs...)\n\nGenerate a markdown report with embedded plots and analysis summary.\n\nArguments\n\ndf: DataFrame with EFDR results\noutput_dir: Directory to save report and plots\npaired_df: Optional DataFrame with paired EFDR results (if calculated separately)\n\n\n\n\n\n","category":"function"},{"location":"api/#Type-Definitions","page":"API Reference","title":"Type Definitions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Key types used throughout the package:","category":"page"},{"location":"api/#Index","page":"API Reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"#EntrapmentAnalyses.jl","page":"Home","title":"EntrapmentAnalyses.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: codecov)","category":"page"},{"location":"","page":"Home","title":"Home","text":"EntrapmentAnalyses.jl is a Julia package for entrapment-based false discovery rate (FDR) analysis in proteomics data. It implements both combined and paired empirical FDR (EFDR) methods for precursor-level and protein-level analyses.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Data Loading: Support for Parquet and TSV file formats\nEFDR Calculation: Both combined and paired empirical FDR methods\nProtein Analysis: Protein-level rollup and per-run analysis\nVisualization: Automated generation of EFDR plots and reports\nPerformance: Optimized for large-scale proteomics datasets","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Navigate to the EntrapmentAnalyses directory. Use ] to enter Pkg mode. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"\n(@v1.11) pkg> activate .\n  Activating project at `~/Projects/EntrapmentAnalysesJmod/EntrapmentAnalyses`\n\njulia> using Revise, EntrapmentAnalyses\nPrecompiling EntrapmentAnalyses...\n  1 dependency successfully precompiled in 6 seconds. 273 already precompiled.","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using EntrapmentAnalyses\n\n# Run precursor-level EFDR analysis\nresults = run_efdr_analysis(\n    [\"data/psm_results.parquet\"],\n    \"data/spectral_library.tsv\";\n    output_dir=\"output\"\n)\n\n# Run protein-level EFDR analysis\nprotein_results = run_protein_efdr_analysis(\n    [\"data/psm_results.parquet\"],\n    \"data/spectral_library.tsv\";\n    output_dir=\"output\"\n)","category":"page"},{"location":"#Documentation-Contents","page":"Home","title":"Documentation Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"guide.md\", \"tutorial.md\", \"api.md\"]\nDepth = 2","category":"page"},{"location":"#Package-Overview","page":"Home","title":"Package Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"EntrapmentAnalyses.jl provides a comprehensive toolkit for analyzing entrapment-based FDR in proteomics experiments. The package is designed to handle the complete workflow from data loading through analysis to visualization.","category":"page"},{"location":"#Key-Components","page":"Home","title":"Key Components","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Data Loading: Robust handling of various input formats with automatic missing value management\nPairing System: Sophisticated peptide pairing that respects both file and plex boundaries\nEFDR Methods: Implementation of both combined and paired EFDR calculations\nProtein Analysis: Tools for protein-level rollup and per-run analysis\nVisualization: Automated plot generation with customizable parameters","category":"page"},{"location":"#Workflow","page":"Home","title":"Workflow","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Load PSM results and spectral library data\nCompute peptide pairings with plex-aware complement scoring\nCalculate per-file q-values\nPerform EFDR analysis (combined and/or paired)\nGenerate visualizations and reports\nOptional: Perform protein-level analysis","category":"page"},{"location":"#Getting-Help","page":"Home","title":"Getting Help","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Check the User Guide for detailed usage instructions\nFollow the Tutorial for a step-by-step walkthrough\nConsult the API Reference for function documentation\nReport issues on GitHub","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"This tutorial walks through a complete analysis workflow using EntrapmentAnalyses.jl.","category":"page"},{"location":"tutorial/#Setup","page":"Tutorial","title":"Setup","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"First, let's set up our environment and load the necessary packages:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"using EntrapmentAnalyses\nusing DataFrames\nusing CSV","category":"page"},{"location":"tutorial/#Example-1:-Basic-Precursor-Level-Analysis","page":"Tutorial","title":"Example 1: Basic Precursor-Level Analysis","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Let's start with a simple analysis of a single proteomics run.","category":"page"},{"location":"tutorial/#Step-1:-Prepare-Your-Data","page":"Tutorial","title":"Step 1: Prepare Your Data","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Ensure you have:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"A PSM results file in Parquet format\nA spectral library in TSV format","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Define file paths\npsm_file = \"data/example_run.parquet\"\nlibrary_file = \"data/spectral_library.tsv\"\noutput_dir = \"tutorial_output\"","category":"page"},{"location":"tutorial/#Step-2:-Run-the-Analysis","page":"Tutorial","title":"Step 2: Run the Analysis","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Run EFDR analysis with default parameters\nresults = run_efdr_analysis(\n    [psm_file],\n    library_file;\n    output_dir=output_dir\n)\n\n# View the results\nprintln(\"EFDR Results:\")\nprintln(results)","category":"page"},{"location":"tutorial/#Step-3:-Interpret-the-Results","page":"Tutorial","title":"Step 3: Interpret the Results","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The results DataFrame contains:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"q_value: The q-value threshold\nefdr: The empirical FDR at that threshold\nmethod: Either \"combined\" or \"paired\"\nrun: The file name (for multi-file analyses)","category":"page"},{"location":"tutorial/#Example-2:-Multi-Run-Analysis","page":"Tutorial","title":"Example 2: Multi-Run Analysis","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"When analyzing multiple runs, the package automatically handles per-file processing:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Define multiple PSM files\npsm_files = [\n    \"data/run1.parquet\",\n    \"data/run2.parquet\",\n    \"data/run3.parquet\"\n]\n\n# Run analysis across all files\nmulti_results = run_efdr_analysis(\n    psm_files,\n    library_file;\n    output_dir=\"multi_run_output\",\n    efdr_method=:both  # Calculate both combined and paired EFDR\n)\n\n# View results for each run\nfor run in unique(multi_results.run)\n    run_data = filter(row -> row.run == run, multi_results)\n    println(\"\\nResults for $run:\")\n    println(run_data)\nend","category":"page"},{"location":"tutorial/#Example-3:-Protein-Level-Analysis","page":"Tutorial","title":"Example 3: Protein-Level Analysis","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"For protein-level FDR analysis:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Run protein-level analysis\nprotein_results = run_protein_efdr_analysis(\n    psm_files,\n    library_file;\n    output_dir=\"protein_output\",\n    protein_q_threshold=0.01,  # 1% protein FDR\n    efdr_method=:paired       # Use paired EFDR for proteins\n)\n\n# The function performs protein rollup automatically\nprintln(\"Protein-level EFDR results saved to: protein_output/\")","category":"page"},{"location":"tutorial/#Example-4:-Custom-Analysis-Pipeline","page":"Tutorial","title":"Example 4: Custom Analysis Pipeline","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"For more control, you can use the lower-level API:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Load data manually\npsm_df = load_parquet_results(psm_file)\nspec_lib_df = load_spectral_library(library_file)\n\n# Add pairing information\ncompute_pairing_vectors!(psm_df, spec_lib_df)\n\n# Calculate q-values per file\ncalculate_qvalues_per_file!(psm_df, :PredVal)\n\n# Filter by q-value\nfiltered_df = filter(row -> row.q_value <= 0.05, psm_df)\n\n# Calculate EFDR\ncombined_efdr_df = calculate_combined_efdr(filtered_df)\npaired_efdr_df = calculate_paired_efdr(filtered_df)\n\n# Create custom plots\nusing Plots\nplot(combined_efdr_df.q_value, combined_efdr_df.efdr,\n     label=\"Combined EFDR\",\n     xlabel=\"Q-value\",\n     ylabel=\"EFDR\",\n     linewidth=2)","category":"page"},{"location":"tutorial/#Example-5:-Handling-Special-Cases","page":"Tutorial","title":"Example 5: Handling Special Cases","text":"","category":"section"},{"location":"tutorial/#Working-with-Missing-Values","page":"Tutorial","title":"Working with Missing Values","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The package automatically handles missing values, but you can check for them:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Load data\npsm_df = load_parquet_results(psm_file)\n\n# Check for missing values\nfor col in names(psm_df)\n    n_missing = sum(ismissing.(psm_df[!, col]))\n    if n_missing > 0\n        println(\"Column $col has $n_missing missing values\")\n    end\nend","category":"page"},{"location":"tutorial/#Debugging-Pairing-Issues","page":"Tutorial","title":"Debugging Pairing Issues","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"If you encounter pairing warnings:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Get detailed pairing information\npsm_df = load_parquet_results(psm_file)\nspec_lib_df = load_spectral_library(library_file)\n\n# Add pairing with verbose output\ncompute_pairing_vectors!(psm_df, spec_lib_df)\n\n# Check pairing statistics\nn_paired = sum(psm_df.pair_id .!= -1)\nn_unpaired = sum(psm_df.pair_id .== -1)\nprintln(\"Paired peptides: $n_paired\")\nprintln(\"Unpaired peptides: $n_unpaired\")","category":"page"},{"location":"tutorial/#Example-6:-Batch-Processing","page":"Tutorial","title":"Example 6: Batch Processing","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"For large-scale analyses:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"# Process files in batches\nall_files = readdir(\"data/psm_results\", join=true)\nbatch_size = 10\n\nfor i in 1:batch_size:length(all_files)\n    batch_end = min(i + batch_size - 1, length(all_files))\n    batch_files = all_files[i:batch_end]\n    \n    println(\"Processing batch $(div(i, batch_size) + 1)\")\n    \n    results = run_efdr_analysis(\n        batch_files,\n        library_file;\n        output_dir=\"batch_$(div(i, batch_size) + 1)\"\n    )\nend","category":"page"},{"location":"tutorial/#Tips-and-Best-Practices","page":"Tutorial","title":"Tips and Best Practices","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Start Small: Test your analysis on a single file before processing large batches\nMonitor Progress: The package shows progress bars for long operations\nCheck Outputs: Always review the generated plots and reports\nSave Intermediate Results: For complex analyses, save intermediate DataFrames","category":"page"},{"location":"tutorial/#Next-Steps","page":"Tutorial","title":"Next Steps","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Explore the API Reference for detailed function documentation\nRead about advanced features in the User Guide\nCheck the GitHub repository for updates","category":"page"}]
}
